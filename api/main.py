from scripts.faq_importer import import_faq
from utils.ai_adapt import adapt_faq
from reports.report_generator import generate_report
from notifier import notify_result
from utils.log_handler import write_daily_log, reset_log_monthly

def run_pipeline():
    print("üöÄ –°—Ç–∞—Ä—Ç –ø–∞–π–ø–ª–∞–π–Ω–∞: FAQ ‚Üí –∞–¥–∞–ø—Ç–∞—Ü–∏—è ‚Üí –æ—Ç—á—ë—Ç ‚Üí –ª–æ–≥")

    # –ò–º–ø–æ—Ä—Ç FAQ
    faq_items = import_faq()
    if not faq_items:
        print("‚ö†Ô∏è –í–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω.")
        write_daily_log("‚õî –í–æ–ø—Ä–æ—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ‚Äî –∑–∞–ø—É—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        return

    # –ê–¥–∞–ø—Ç–∞—Ü–∏—è
    adapted = adapt_faq(faq_items)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    report_text = "\n".join([f"Q: {q}\nA: {a}" for q, a in adapted])
    generate_report(report_text)

    # –ó–∞–ø–∏—Å—å –ª–æ–≥–∞
    write_daily_log(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(faq_items)} FAQ-–≤–æ–ø—Ä–æ—Å–æ–≤")
    reset_log_monthly()

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    # notify_result()

    print("üìò –¶–∏–∫–ª –∑–∞–≤–µ—Ä—à—ë–Ω ‚Äî –æ—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω, –ª–æ–≥ –∑–∞–ø–∏—Å–∞–Ω.")
